import dotenv from "dotenv";
import { sendWhatsAppMessage } from "./modules/whatsapp/services/messageService";

// Carrega vari√°veis de ambiente
dotenv.config();

async function testTwilioMessage() {
  console.log("üß™ ===== TESTE DE ENVIO TWILIO =====\n");
  
  // Verifica vari√°veis de ambiente
  console.log("üîç Verificando configura√ß√µes:");
  console.log(`   TWILIO_ACCOUNT_SID: ${process.env.TWILIO_ACCOUNT_SID ? '‚úÖ Configurado' : '‚ùå N√£o configurado'}`);
  console.log(`   TWILIO_AUTH_TOKEN: ${process.env.TWILIO_AUTH_TOKEN ? '‚úÖ Configurado' : '‚ùå N√£o configurado'}`);
  console.log(`   TWILIO_WHATSAPP_FROM: ${process.env.TWILIO_WHATSAPP_FROM || '‚ùå N√£o configurado'}\n`);
  
  if (!process.env.TWILIO_ACCOUNT_SID || !process.env.TWILIO_AUTH_TOKEN || !process.env.TWILIO_WHATSAPP_FROM) {
    console.error("‚ùå Erro: Vari√°veis de ambiente do Twilio n√£o configuradas!");
    console.error("Configure TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN e TWILIO_WHATSAPP_FROM no arquivo .env\n");
    process.exit(1);
  }
  
  // N√∫mero de destino (deve ser um n√∫mero que voc√™ tem acesso no sandbox do Twilio)
  const destinationNumber = process.argv[2];
  
  if (!destinationNumber) {
    console.error("‚ùå Erro: N√∫mero de destino n√£o fornecido!");
    console.error("Uso: npm run test:twilio <numero>");
    console.error("Exemplo: npm run test:twilio +5517999999999\n");
    process.exit(1);
  }
  
  console.log(`üì± N√∫mero de destino: ${destinationNumber}\n`);
  
  // Mensagem de teste
  const testMessage = "üéâ Teste de integra√ß√£o Twilio WhatsApp!\n\nSe voc√™ recebeu esta mensagem, a integra√ß√£o est√° funcionando perfeitamente! üöÄ";
  
  console.log("üì§ Enviando mensagem de teste...\n");
  
  try {
    const sid = await sendWhatsAppMessage(destinationNumber, testMessage);
    
    if (sid) {
      console.log("\n‚úÖ ===== TESTE CONCLU√çDO COM SUCESSO =====");
      console.log(`‚úÖ Mensagem enviada com sucesso!`);
      console.log(`‚úÖ SID da mensagem: ${sid}`);
      console.log("‚úÖ Verifique seu WhatsApp para confirmar o recebimento.\n");
    } else {
      console.log("\n‚ùå ===== TESTE FALHOU =====");
      console.log("‚ùå Falha ao enviar mensagem.");
      console.log("‚ùå Verifique os logs acima para mais detalhes.\n");
      process.exit(1);
    }
  } catch (error: any) {
    console.error("\n‚ùå ===== ERRO NO TESTE =====");
    console.error("Erro:", error.message);
    console.error("Stack:", error.stack);
    console.error("================================\n");
    process.exit(1);
  }
}

// Executa o teste
testTwilioMessage();
